---
---
<div class="fixed z-[10] top-0 pt-[12%] lg:pt-[5%] left-0 h-[100vh] w-[100%] bg-black pre-about opacity-0">
    <div class="h-[100vh] flex flex-col items-center justify-center relative ">
        <div class="chocky-card absolute bg-[url('/images/about/center.jpg')] bg-top bg-black bg-no-repeat bg-contain h-[50vw] w-[100%] z-[4] top-0">
            <div class="w-full h-full flex flex-col items-center justify-center">
                <div class="overflow-y-hidden start-cont h-[40px] md:h-[100px] lg:h-[150px] xl:h-[180px] flex flex-col justify-center items-center relative">
                    <h1 class="text-white hover:text-horror-neutral-color transition-all duration-700 text-center text-[12px] md:text-[30px] lg:text-[40px] xl:text-[50px] font-bold handTxt -translate-y-[200%] mouse-change">Handoff Documents</h1>
                    <h1 class="text-white hover:text-horror-neutral-color transition-all duration-700 text-center text-[12px] md:text-[30px] lg:text-[40px] xl:text-[50px] font-bold aboutTxt mouse-change">About Horror Vault</h1>
                </div>
                <div class="fixed right-0 w-[10vw] h-full bg-contain bg-center transition-all duration-700 bg-[url('/images/icons/icon-left.svg')] hover:bg-[url('/images/icons/icon-left-red.svg')] bg-no-repeat right-arrow mouse-change"></div>
            </div>
        </div>
        <div class="absolute bg-[url('/images/about/right.png')] bg-center bg-no-repeat bg-contain   aspect-square w-[35%] origin-top-left transform rotate-[10deg]  translate-x-[70%] top-0">
        </div>
        <div class="absolute bg-[url('/images/about/note.png')] note bg-center bg-no-repeat bg-contain    aspect-square w-[25%] origin-bottom-left transform -rotate-[15deg] -translate-x-[50%] top-0 translate-y-[50%] z-[3]"></div>
        <div class="absolute bg-[url('/images/about/left.png')] left-card bg-center bg-no-repeat bg-contain    aspect-square w-[35%] origin-top-right transform -rotate-[10deg]  -translate-x-[70%] top-0">
            <div class=" absolute -left-[20%] w-[20%] h-full bg-contain bg-center bg-[url('/images/icons/icon-right.svg')] bg-no-repeat transform rotate-[10deg] transition-all duration-700 hover:bg-[url('/images/icons/icon-right-red.svg')] left-arrow mouse-change"></div>
        </div>
    </div>
</div>

<script>
    let chockyCard = document.querySelector('.chocky-card') as HTMLElement
    let rightArrow = document.querySelector('.right-arrow') as HTMLElement
    let leftArrow = document.querySelector('.left-arrow') as HTMLElement
    let aboutTxt = document.querySelector('.aboutTxt') as HTMLElement
    let handTxt = document.querySelector('.handTxt') as HTMLElement

    let showChuckyCard = sessionStorage.getItem("show")
    let canGoAgain = true

    console.log('showChuckyCard', showChuckyCard)

    let preAboutCard = document.querySelector('.pre-about') as HTMLElement
    let aboutCard = document.querySelector('.about') as HTMLElement


    if(showChuckyCard == undefined || showChuckyCard == null){
        document.body.style.overflow = 'hidden'
        preAboutCard.style.opacity = '1'
    }
    else{
        preAboutCard.style.display = 'none'
        aboutCard.style.opacity = '1'
    }

    
    

    rightArrow.onclick = () => {
        if(canGoAgain){
            chockyCard.animate([{width : '100%', height :'50vw'},{width : '40%', height : '40vw'}], {duration : 2500, fill : 'forwards', easing: 'cubic-bezier(1,0,0,1)'})
            rightArrow.animate([{opacity :'1'},{opacity:'0'}],{duration:2500, fill:'forwards', easing: 'cubic-bezier(1,0,0,1)'})
            handTxt.animate([{transform : 'translateY(-200%)'}, {transform : 'translateY(0%)'}],{duration : 2500, fill : 'forwards', easing: 'cubic-bezier(1,0,0,1)'})
            aboutTxt.animate([{transform : 'translateY(0%)'}, {transform : 'translateY(200%)'}],{duration : 2500, fill : 'forwards', easing: 'cubic-bezier(1,0,0,1)'})

            canGoAgain = false
            setTimeout(() => {
                rightArrow.style.display = 'none'
                canGoAgain = true
            }, 2500);
        }
    }

    leftArrow.onclick = () => {
        if(canGoAgain){
            canGoAgain = false
            chockyCard.animate([{width : '40%', height :'40vw'},{width : '100%', height : '50vw'}], {duration : 2500, fill : 'forwards', easing: 'cubic-bezier(1,0,0,1)'})
            handTxt.animate([{transform : 'translateY(0%)'}, {transform : 'translateY(-200%)'}],{duration : 2500, fill : 'forwards', easing: 'cubic-bezier(1,0,0,1)'})
            aboutTxt.animate([{transform : 'translateY(200%)'}, {transform : 'translateY(0%)'}],{duration : 2500, fill : 'forwards', easing: 'cubic-bezier(1,0,0,1)'})

            setTimeout(()=>{
                rightArrow.style.display = 'block'
                rightArrow.animate([{opacity :'0'},{opacity:'1'}],{duration:2500, fill:'forwards', easing: 'cubic-bezier(1,0,0,1)'})
                canGoAgain = true
            }, 2500)
        }
    }

    //for flip
    aboutTxt.onclick = slideChuckyUp

    handTxt.onclick = slideChuckyUp

    function slideChuckyUp(){
        aboutCard.style.opacity = '1'
        preAboutCard.style.transform = 'none'
        preAboutCard.style.transformOrigin = 'bottom'
        preAboutCard.style.transition = 'all 4s cubic-bezier(1, 0, 0, 1)'
        preAboutCard.style.transform = 'translateY(-150vh)'

        setTimeout(()=>{
            document.body.style.overflow = ''
        }, 3000)

        sessionStorage.setItem("show", 'false')
    }
</script>