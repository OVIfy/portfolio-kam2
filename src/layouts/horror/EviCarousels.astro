---
import EvidenceCard1 from "../components/EviCards/EvidenceCard1.astro";
import EvidenceCard2 from "../components/EviCards/EvidenceCard2.astro";
import EvidenceCard3 from "../components/EviCards/EvidenceCard3.astro";
import EviCardsControl from "../components/EviCards/EviCardsControl.astro";
---
<div class="relative overflow-hidden">
    <div class="overflow-hidden relative w-full flex flex-col justify-center items-center transform lg:scale-[1]">
        
            <!--left -->
            <div class="absolute w-full transform lg:scale-75 right-[65%] hidden lg:block">
                <div class="sm:w-[90%] hover:cursor-pointer  lg:w-[80%] inline-block left-0 top-0 absolute md:static z-10 opacity-0 left-card">
                    <EvidenceCard1 />
                </div>
                <div class="sm:w-[90%] hover:cursor-pointer lg:w-[80%] inline-block top-0 left-0 absolute z-5 opacity-0 left-card">
                    <EvidenceCard2 />
                </div>
                <div class="sm:w-[90%] hover:cursor-pointer  lg:w-[80%] inline-block z-1 left-0 md:absolute left-card opacity-0">
                    <EvidenceCard3 />
                </div>
            </div>

            <!--right -->
            <div class="absolute w-full transform lg:scale-75 left-[80%] hidden lg:block">
                <div class="sm:w-[90%] hover:cursor-pointer  lg:w-[80%] inline-block left-0 top-0 absolute md:static z-10 opacity-0 right-card">
                    <EvidenceCard1 />
                </div>
                <div class="sm:w-[90%] hover:cursor-pointer lg:w-[80%] inline-block top-0 left-0 absolute z-5 opacity-0 right-card">
                    <EvidenceCard2 />
                </div>
                <div class="sm:w-[90%] hover:cursor-pointer  lg:w-[80%] inline-block z-1 left-0 md:absolute right-card opacity-0">
                    <EvidenceCard3 />
                </div>
            </div>

            
            <div class="sm:w-[90%] hover:cursor-pointer lg:w-[80%]  inline-block top-0 absolute md:static opacity-0 evi-card">
                <EvidenceCard1 />
            </div>
            <div class="sm:w-[90%] hover:cursor-pointer lg:w-[80%]  inline-block top-0 absolute opacity-0 evi-card">
                <EvidenceCard2 />
            </div>
            <div class="j sm:w-[90%]  hover:cursor-pointer lg:w-[80%] inline-block  md:absolute evi-card opacity-0">
                <EvidenceCard3 />
            </div>
            <div class="z-[11] bg-red-500 absolute w-[100%] sm:w-[90%] lg:w-[90vw] bottom-[50px] lg:bottom-[90%] lg:top-[100px]">
                <EviCardsControl/>
            </div>
    </div>
</div>
<style>
    @keyframes fade{
        from{
            opacity: 0;
        }
        to{
            opacity: 1;
        }
    }

    @keyframes fade2{
        from{
            opacity: 1;
        }
        to{
            opacity: 0;
        }
    }

    @keyframes slide-right{
        from{
            
        }
        to{
            opacity: 0;
        }
    }

    .fade-in{
        animation: fade 1s ease-in forwards;
    }

    .fade-out{
        animation: fade2 1s ease-in forwards;
    }
</style>
<script>
    const rightButton = document.querySelector('.evi-btn-right') as HTMLElement
    const leftButton = document.querySelector('.evi-btn-left') as HTMLElement
    const allEviCards = document.querySelectorAll('.evi-card')
    const allLeftCards = document.querySelectorAll('.left-card') as NodeList
    const allRightCards = document.querySelectorAll('.right-card') as NodeList
    let slideArr = [2,0,1]

    let text1 = allEviCards[0].querySelector('.text-1')
    let text2 = allEviCards[1].querySelector('.text-2')
    let text3 = allEviCards[2].querySelector('.text-3')

    // allEviCards[currentCardIndex].classList.add('fade-in')
    animateCards(slideArr[1], allEviCards)
    animateCards(slideArr[0], allLeftCards)
    animateCards(slideArr[2], allRightCards)

    
    allLeftCards.forEach(card => card.addEventListener('click', (e)=>{
       moveLeft()
    }))

    allRightCards.forEach(card => card.addEventListener('click', (e)=>{
       moveRight()
    }))


    leftButton.onclick = (e) => {
        moveLeft()
    }

    rightButton.onclick = (e) => {
       moveRight()
    }

    function animateCards(indexOfItemToFadeIn, itemArray, indexOfItemToFadeOut = -100, direction = ''){
        if(indexOfItemToFadeOut !== -100){
            // itemArray[indexOfItemToFadeOut].classList.remove('fade-in')
            // itemArray[indexOfItemToFadeOut].classList.add('fade-out')
            itemArray[indexOfItemToFadeOut].animate([{opacity : '1', zIndex : '10'}, {opacity : '0', zIndex : '1'}], {duration : 1000, fill:'forwards'})

        }

        itemArray[indexOfItemToFadeIn].animate([{opacity : '0', zIndex : '1'}, {opacity : '1', zIndex : '10'}], {duration : 1000, fill:'forwards'})
    }

    function moveRight(){
        let k = slideArr.shift()
        slideArr.push(k)

        let currenText = allEviCards[slideArr[1]].querySelector('.tt') as HTMLElement
        let textToCome = allEviCards[slideArr[2]].querySelector('.tt') as HTMLElement
        let currenTextOff = currenText.getBoundingClientRect().left
        let textToComeOff = textToCome.getBoundingClientRect().left

        // console.log('where translate starts', )
        // textToCome.style.transform = `translateX(${textToComeOff - currenTextOff}px)`

        const slideInKeyframe = [
            {transform : `translateX(${textToComeOff - currenTextOff < 0 ? -(textToComeOff - currenTextOff) : textToComeOff - currenTextOff}px)`},
            {transform : 'translateX(0px)'}
        ]

        const slideInTiming = {
            duration: 3000,
        };
        



        animateCards(slideArr[1], allEviCards, slideArr[0])
        animateCards(slideArr[0], allLeftCards, slideArr[2])
        animateCards(slideArr[2], allRightCards, slideArr[1])

        textToCome.animate(slideInKeyframe, slideInTiming)

    }

    function moveLeft(){
        let k = slideArr.pop()
        slideArr.unshift(k)

        animateCards(slideArr[1], allEviCards, slideArr[2])
        animateCards(slideArr[0], allLeftCards, slideArr[1])
        animateCards(slideArr[2], allRightCards, slideArr[0])
    }
</script>