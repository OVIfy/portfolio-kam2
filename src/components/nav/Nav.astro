---
import NavItem from '@compo/nav/NavItem.astro'
import NavItems from '@compo/nav/NavItems.astro'
import Button from '@compo/Button.astro'
// import LightBtn from '@compo/LightBtn.svelte'
import IconDeck from '@compo/IconDeck.astro'

const {index = 0} = Astro.props
---
<nav class="px-4 lg:px-6 xl:px-20 md:py-[28px] flex justify-between pt-12 items-center">
   <div class="w-8 h-4 flex flex-col justify-between relative group md:hidden">
        <div class="bg-my-red h-[1px] w-full transition-transform duration-300"></div>
        <div class="bg-my-red h-[2px] w-full transition-transform duration-300"></div>
        <div class="bg-my-red h-[2px] w-full transition-transform duration-300"></div>
        <button class="absolute open-nav-btn z-[2] w-full h-full"></button>
   </div>

   <h1 class="font-bilal text-[24px] sm:text-[40px] md:text-[32px] lg:text-[30px]">Kamil Oseni</h1>

   <img src="images/icons/icon-profile.svg" alt="kamils picture" class="sm:w-[90px] md:hidden">

   <NavItems style="hidden md:flex  justify-center items-center gap-4 xl:gap-16">
        <ul class="hidden md:flex gap-4 lg:gap-10 xl:gap-16">
            <NavItem selected>Home</NavItem>
            <NavItem>Featured Works</NavItem>
            <NavItem>About</NavItem>
            <NavItem>Resume</NavItem>
        </ul>
        <Button style="bg-my-red border-my-red hover:bg-my-red hover:text-white">Get in touch</Button>
        <!-- <LightBtn client:load/> -->
        
   </NavItems>
</nav>

<nav class="md:hidden bg-black mob-nav hide-nav transform absolute left-0 -translate-x-[300px] top-0 pl-4 pt-[68px] pb-[33px] pr-8 bg-primary-color z-50 rounded-r-[40px] shadow-[2px_2px_2px] shadow-my-red/[0.5]">
     <!-- first part -->
     <div class="flex justify-end items-center">
          <!-- <div class="w-[59px] h-[64px] bg-[url('/images/fire.gif')] bg-cover bg-no-repeat bg-[center_left_-15px] bg-black bg-blend-hard-light "></div> -->
          <div class="close-nav-btn mouse-change hover:cursor-pointer w-[24px] h-[16px] bg-center bg-no-repeat bg-[url('/images/icons/icon-close.svg')]"></div>
     </div>

     <!-- second part -->
     <ul class="mt-[41px] mb-[41px] text-[16px] font-bold">
          <li class="group"><a href="/" class:list={["transition-all duration-700 flex items-center group mob-link group-hover:text-neutral-color", index == 0 && "text-neutral-color"]}>Home <span class:list={["ml-2 transition-all duration-700 inline-block h-[5px] w-[5px] group-hover:bg-neutral-color", index == 0 && "bg-neutral-color"]}></span></a></li>
          <li class="my-[40px] group"><a href="/about" class:list={["transition-all duration-700 flex items-center group mob-link group-hover:text-neutral-color", index == 1 && "text-neutral-color"]} >About <span class:list={["ml-2 transition-all duration-700 inline-block h-[5px] w-[5px] group-hover:bg-neutral-color", index == 1 && "bg-neutral-color"]}></span></a></li>
          <li class="group"><a href="/about/#contact" class:list={["transition-all duration-700 flex items-center group mob-link group-hover:text-neutral-color", index == 2 && "text-neutral-color"]}>Get in touch  <span class:list={["ml-2 transition-all duration-700 inline-block h-[5px] w-[5px] group-hover:bg-neutral-color", index == 2 && "bg-neutral-color"]}></span></a></li>
     </ul>

     <!-- third part -->
     <IconDeck
         urls={[
              '/images/icons/icon-twitter.png',
              '/images/icons/icon-insta.png',
              '/images/icons/icon-email.png',
              '/images/icons/icon-door.png'
         ]} 
      width="12px"
      contStyle="flex-row p-2"
    />
  </nav>

  <script>
     let openNav = document.querySelector('.open-nav-btn') as HTMLElement
     let closeNav = document.querySelector('.close-nav-btn') as HTMLElement
     let nav = document.querySelector('.mob-nav') as HTMLElement
     let mobLinks = document.querySelectorAll('.mob-link') as NodeListOf<HTMLElement>
     let deskLinks = document.querySelectorAll('.desk-link') as NodeListOf<HTMLElement>
 
 
 
     openNav.addEventListener('click',()=>{
         nav.animate([{transform : 'translateX(0px)'}], {duration : 1000, fill:'forwards', easing : 'cubic-bezier(1, 0.6, 0.2, 1)'})
     
     })
     closeNav.addEventListener('click',()=>{
         nav.animate([{transform : 'translateX(-300px)'}], {duration : 1000, fill:'forwards', easing : 'cubic-bezier(1, 0.2, 0.6, 1)'})
     
     })
 
     nav.onclick = (e) => e.stopPropagation()
 
     document.onclick = (e) => {
         if(e.target !== openNav){
             nav.animate([{transform : 'translateX(-300px)'}], {duration : 1000, fill:'forwards', easing : 'cubic-bezier(1, 0.2, 0.6, 1)'})
         
         }
     }
 </script>